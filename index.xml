<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artem Garmash</title>
    <link>https://agarmash.com/</link>
    <description>Recent content on Artem Garmash</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Sep 2020 13:39:08 +0300</lastBuildDate>
    
	<atom:link href="https://agarmash.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Integrate a C Library into an iOS App Written in Swift</title>
      <link>https://agarmash.com/posts/c-library-in-swift/</link>
      <pubDate>Wed, 30 Sep 2020 13:39:08 +0300</pubDate>
      
      <guid>https://agarmash.com/posts/c-library-in-swift/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Initially, I wrote this article for &lt;a href=&#34;https://medium.com/@distillerytech/how-to-integrate-a-c-library-into-an-ios-app-written-in-swift-ef92c0e0d42b&#34; target=&#34;_blank&#34;&gt;Distillery Tech Blog&lt;/a&gt; back in 2018. I decided to copy it here for the further preservation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nowadays, everyone values privacy and security. That’s why it wasn’t surprising when, recently, we needed to use an encryption library on one of the projects.&lt;/p&gt;
&lt;p&gt;For the project in question, the decision was made to use libsignal. Originally developed for &lt;a href=&#34;https://apps.apple.com/us/app/signal-private-messenger/id874139669&#34; target=&#34;_blank&#34;&gt;Signal Private Messenger&lt;/a&gt;, libsignal has a good reputation among security specialists.&lt;/p&gt;
&lt;h2 id=&#34;using-libsignal&#34;&gt;Using libsignal&lt;/h2&gt;
&lt;p&gt;At the end of July 2018, there were implementations of libsignal in C, Java, and JavaScript. There was also an implementation in Objective-C called SignalProtocolKit, but at that time it had already been deprecated.&lt;/p&gt;
&lt;p&gt;Our goal was to use the library in an iOS app written in Swift. To keep everything up to date, we had to use the one written in C, for which &lt;a href=&#34;https://github.com/signalapp/libsignal-protocol-c&#34; target=&#34;_blank&#34;&gt;the source code is stored here&lt;/a&gt;. Lucky for us, Swift can interact with C code very smoothly, at minimum because some of Apple’s low-level libraries are written in C. The tricky part was to add the library to the project correctly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://agarmash.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://agarmash.com/about/</guid>
      <description>Got interested in programming in middle school, currently working as an iOS developer. In my free time, I enjoy working on personal hardware and software projects, riding a trail bike in the mountains, and listening to music. If you have something to discuss, feel free to email me or to approach me on social media!</description>
    </item>
    
  </channel>
</rss>